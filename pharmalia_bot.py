# file: pharmalia_webhook.py
import os
from flask import Flask, request
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    Application,
    ApplicationBuilder,
    CommandHandler,
    ConversationHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

CITY, SERVICE, NAME, PHONE = range(4)

# üîπ –¢–æ–∫–µ–Ω –≤—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
BOT_TOKEN = "8396406613:AAEOcf1M88KuCYVjpVKT_XmHePCKLGwVz60"
ADMIN_CHAT_ID = "@Pharmalia"  # ID –∏–ª–∏ username –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞/–≥—Ä—É–ø–ø—ã

# –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram
application = ApplicationBuilder().token(BOT_TOKEN).build()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    reply_keyboard = [["–ë–∞—Ç—É–º–∏"]]
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True),
    )
    return CITY

async def get_city(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data["city"] = update.message.text
    reply_keyboard = [
        ["–í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è", "–ü–µ–¥–∏–∞—Ç—Ä–∏—è"],
        ["–†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è", "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è"],
        ["–£–ó–ò"],
    ]
    await update.message.reply_text(
        "–ö–∞–∫—É—é —É—Å–ª—É–≥—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å?",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True),
    )
    return SERVICE

async def get_service(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data["service"] = update.message.text
    await update.message.reply_text(
        "–ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:", reply_markup=ReplyKeyboardRemove()
    )
    return NAME

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–ò —Å–≤–æ–π –≥—Ä—É–∑–∏–Ω—Å–∫–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data["phone"] = update.message.text
    info = context.user_data
    admin_msg = (
        f"–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –≤ –∫–ª–∏–Ω–∏–∫—É –§–∞—Ä–º–∞–ª–∏–∞\n"
        f"–ì–æ—Ä–æ–¥: {info['city']}\n"
        f"–£—Å–ª—É–≥–∞: {info['service']}\n"
        f"–ò–º—è: {info['name']}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {info['phone']}"
    )
    await application.bot.send_message(chat_id=ADMIN_CHAT_ID, text=admin_msg)
    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ! –ù–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è —Å–Ω–æ–≤–∞."
    )
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text(
        "–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start.",
        reply_markup=ReplyKeyboardRemove(),
    )
    return ConversationHandler.END

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
conv_handler = ConversationHandler(
    entry_points=[CommandHandler("start", start)],
    states={
        CITY: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_city)],
        SERVICE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_service)],
        NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
        PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
    },
    fallbacks=[CommandHandler("cancel", cancel)],
)
application.add_handler(conv_handler)

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏—ë–º–∞ –≤–µ–±-—Ö—É–∫–æ–≤
app = Flask(__name__)

@app.post("/")
async def webhook_handler():
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram."""
    update = Update.de_json(request.get_json(force=True), application.bot)
    await application.process_update(update)
    return "OK"

if __name__ == "__main__":
    # –ü—Ä–∏ –ª–æ–∫–∞–ª—å–Ω–æ–º –∑–∞–ø—É—Å–∫–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä Flask
    port = int(os.environ.get("PORT", 8080))
    app.run(host="0.0.0.0", port=port)

